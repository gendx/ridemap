on: [push, pull_request]
name: Tests
jobs:
  test:
    strategy:
      matrix:
        mode:
          - debug
          - release
        backend:
          - gtk4
          - piston
        include:
          - mode: debug
            cli: ""
          - mode: release
            cli: "--release"
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
      CARGO_UNSTABLE_SPARSE_REGISTRY: true
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly

      - name: Create Cargo.lock file
        run: cargo generate-lockfile
      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: cargo-registry-${{ matrix.backend }}-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cargo-registry-${{ matrix.backend }}-${{ hashFiles('Cargo.toml') }}
            cargo-registry-${{ matrix.backend }}

      - name: Check Cargo version
        run: cargo -V > cargo.version.txt
      - name: Cache Cargo target
        uses: actions/cache@v3
        with:
          path: target
          key: cargo-target-${{ matrix.mode }}-${{ matrix.backend }}-${{ hashFiles('cargo.version.txt') }}-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cargo-target-${{ matrix.mode }}-${{ matrix.backend }}-${{ hashFiles('cargo.version.txt') }}-${{ hashFiles('Cargo.toml') }}
            cargo-target-${{ matrix.mode }}-${{ matrix.backend }}-${{ hashFiles('cargo.version.txt') }}

      - name: Install development packages for GTK-4
        if: ${{ matrix.backend == 'gtk4' }}
        run: sudo apt install -y libgtk-4-dev --no-install-recommends

      - name: Tests in ${{ matrix.mode }} mode
        run: cargo test ${{ matrix.cli }} --verbose --no-default-features --features backend_${{ matrix.backend }}
